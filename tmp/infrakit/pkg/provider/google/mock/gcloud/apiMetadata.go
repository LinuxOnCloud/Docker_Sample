// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/docker/infrakit/pkg/provider/google/plugin/gcloud (interfaces: APIMetadata)

package gcloud

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of APIMetadata interface
type MockAPIMetadata struct {
	ctrl     *gomock.Controller
	recorder *_MockAPIMetadataRecorder
}

// Recorder for MockAPIMetadata (not exported)
type _MockAPIMetadataRecorder struct {
	mock *MockAPIMetadata
}

func NewMockAPIMetadata(ctrl *gomock.Controller) *MockAPIMetadata {
	mock := &MockAPIMetadata{ctrl: ctrl}
	mock.recorder = &_MockAPIMetadataRecorder{mock}
	return mock
}

func (_m *MockAPIMetadata) EXPECT() *_MockAPIMetadataRecorder {
	return _m.recorder
}

func (_m *MockAPIMetadata) ExternalIP() (string, error) {
	ret := _m.ctrl.Call(_m, "ExternalIP")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) ExternalIP() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ExternalIP")
}

func (_m *MockAPIMetadata) Get(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockAPIMetadata) Hostname() (string, error) {
	ret := _m.ctrl.Call(_m, "Hostname")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) Hostname() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Hostname")
}

func (_m *MockAPIMetadata) InstanceAttributeValue(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "InstanceAttributeValue", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) InstanceAttributeValue(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InstanceAttributeValue", arg0)
}

func (_m *MockAPIMetadata) InstanceAttributes() ([]string, error) {
	ret := _m.ctrl.Call(_m, "InstanceAttributes")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) InstanceAttributes() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InstanceAttributes")
}

func (_m *MockAPIMetadata) InstanceID() (string, error) {
	ret := _m.ctrl.Call(_m, "InstanceID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) InstanceID() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InstanceID")
}

func (_m *MockAPIMetadata) InstanceName() (string, error) {
	ret := _m.ctrl.Call(_m, "InstanceName")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) InstanceName() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InstanceName")
}

func (_m *MockAPIMetadata) InstanceTags() ([]string, error) {
	ret := _m.ctrl.Call(_m, "InstanceTags")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) InstanceTags() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InstanceTags")
}

func (_m *MockAPIMetadata) InternalIP() (string, error) {
	ret := _m.ctrl.Call(_m, "InternalIP")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) InternalIP() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "InternalIP")
}

func (_m *MockAPIMetadata) NumericProjectID() (string, error) {
	ret := _m.ctrl.Call(_m, "NumericProjectID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) NumericProjectID() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NumericProjectID")
}

func (_m *MockAPIMetadata) ProjectAttributeValue(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "ProjectAttributeValue", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) ProjectAttributeValue(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ProjectAttributeValue", arg0)
}

func (_m *MockAPIMetadata) ProjectAttributes() ([]string, error) {
	ret := _m.ctrl.Call(_m, "ProjectAttributes")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) ProjectAttributes() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ProjectAttributes")
}

func (_m *MockAPIMetadata) ProjectID() (string, error) {
	ret := _m.ctrl.Call(_m, "ProjectID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) ProjectID() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ProjectID")
}

func (_m *MockAPIMetadata) Scopes(_param0 string) ([]string, error) {
	ret := _m.ctrl.Call(_m, "Scopes", _param0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) Scopes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Scopes", arg0)
}

func (_m *MockAPIMetadata) Zone() (string, error) {
	ret := _m.ctrl.Call(_m, "Zone")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAPIMetadataRecorder) Zone() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Zone")
}
