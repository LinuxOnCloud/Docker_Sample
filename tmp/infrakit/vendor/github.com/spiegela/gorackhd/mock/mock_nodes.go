// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/spiegela/gorackhd/monorail (interfaces: NodeIface)

package mock

import (
	runtime "github.com/go-openapi/runtime"
	gomock "github.com/golang/mock/gomock"
	nodes "github.com/spiegela/gorackhd/client/nodes"
)

// Mock of NodeIface interface
type MockNodeIface struct {
	ctrl     *gomock.Controller
	recorder *_MockNodeIfaceRecorder
}

// Recorder for MockNodeIface (not exported)
type _MockNodeIfaceRecorder struct {
	mock *MockNodeIface
}

func NewMockNodeIface(ctrl *gomock.Controller) *MockNodeIface {
	mock := &MockNodeIface{ctrl: ctrl}
	mock.recorder = &_MockNodeIfaceRecorder{mock}
	return mock
}

func (_m *MockNodeIface) EXPECT() *_MockNodeIfaceRecorder {
	return _m.recorder
}

func (_m *MockNodeIface) NodesAddRelations(_param0 *nodes.NodesAddRelationsParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesAddRelationsOK, error) {
	ret := _m.ctrl.Call(_m, "NodesAddRelations", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesAddRelationsOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesAddRelations(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesAddRelations", arg0, arg1)
}

func (_m *MockNodeIface) NodesDelByID(_param0 *nodes.NodesDelByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesDelByIDNoContent, error) {
	ret := _m.ctrl.Call(_m, "NodesDelByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesDelByIDNoContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesDelByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesDelByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesDelRelations(_param0 *nodes.NodesDelRelationsParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesDelRelationsNoContent, error) {
	ret := _m.ctrl.Call(_m, "NodesDelRelations", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesDelRelationsNoContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesDelRelations(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesDelRelations", arg0, arg1)
}

func (_m *MockNodeIface) NodesDelTagByID(_param0 *nodes.NodesDelTagByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesDelTagByIDNoContent, error) {
	ret := _m.ctrl.Call(_m, "NodesDelTagByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesDelTagByIDNoContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesDelTagByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesDelTagByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetAll(_param0 *nodes.NodesGetAllParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetAllOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetAll", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetAllOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetAll(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetAll", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetByID(_param0 *nodes.NodesGetByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetCatalogByID(_param0 *nodes.NodesGetCatalogByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetCatalogByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetCatalogByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetCatalogByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetCatalogByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetCatalogByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetCatalogSourceByID(_param0 *nodes.NodesGetCatalogSourceByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetCatalogSourceByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetCatalogSourceByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetCatalogSourceByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetCatalogSourceByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetCatalogSourceByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetObmsByNodeID(_param0 *nodes.NodesGetObmsByNodeIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetObmsByNodeIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetObmsByNodeID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetObmsByNodeIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetObmsByNodeID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetObmsByNodeID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetPollersByID(_param0 *nodes.NodesGetPollersByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetPollersByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetPollersByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetPollersByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetPollersByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetPollersByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetRelations(_param0 *nodes.NodesGetRelationsParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetRelationsOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetRelations", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetRelationsOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetRelations(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetRelations", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetSSHByID(_param0 *nodes.NodesGetSSHByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetSSHByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetSSHByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetSSHByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetSSHByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetSSHByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetTagsByID(_param0 *nodes.NodesGetTagsByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetTagsByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetTagsByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetTagsByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetTagsByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetTagsByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesGetWorkflowByID(_param0 *nodes.NodesGetWorkflowByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesGetWorkflowByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesGetWorkflowByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesGetWorkflowByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesGetWorkflowByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesGetWorkflowByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesMasterDelTagByID(_param0 *nodes.NodesMasterDelTagByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesMasterDelTagByIDNoContent, error) {
	ret := _m.ctrl.Call(_m, "NodesMasterDelTagByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesMasterDelTagByIDNoContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesMasterDelTagByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesMasterDelTagByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesPatchByID(_param0 *nodes.NodesPatchByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesPatchByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesPatchByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesPatchByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesPatchByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesPatchByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesPatchTagByID(_param0 *nodes.NodesPatchTagByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesPatchTagByIDOK, error) {
	ret := _m.ctrl.Call(_m, "NodesPatchTagByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesPatchTagByIDOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesPatchTagByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesPatchTagByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesPost(_param0 *nodes.NodesPostParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesPostCreated, error) {
	ret := _m.ctrl.Call(_m, "NodesPost", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesPostCreated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesPost(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesPost", arg0, arg1)
}

func (_m *MockNodeIface) NodesPostSSHByID(_param0 *nodes.NodesPostSSHByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesPostSSHByIDCreated, error) {
	ret := _m.ctrl.Call(_m, "NodesPostSSHByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesPostSSHByIDCreated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesPostSSHByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesPostSSHByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesPostWorkflowByID(_param0 *nodes.NodesPostWorkflowByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesPostWorkflowByIDCreated, error) {
	ret := _m.ctrl.Call(_m, "NodesPostWorkflowByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesPostWorkflowByIDCreated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesPostWorkflowByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesPostWorkflowByID", arg0, arg1)
}

func (_m *MockNodeIface) NodesPutObmsByNodeID(_param0 *nodes.NodesPutObmsByNodeIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesPutObmsByNodeIDCreated, error) {
	ret := _m.ctrl.Call(_m, "NodesPutObmsByNodeID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesPutObmsByNodeIDCreated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesPutObmsByNodeID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesPutObmsByNodeID", arg0, arg1)
}

func (_m *MockNodeIface) NodesWorkflowActionByID(_param0 *nodes.NodesWorkflowActionByIDParams, _param1 runtime.ClientAuthInfoWriter) (*nodes.NodesWorkflowActionByIDAccepted, error) {
	ret := _m.ctrl.Call(_m, "NodesWorkflowActionByID", _param0, _param1)
	ret0, _ := ret[0].(*nodes.NodesWorkflowActionByIDAccepted)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNodeIfaceRecorder) NodesWorkflowActionByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NodesWorkflowActionByID", arg0, arg1)
}
