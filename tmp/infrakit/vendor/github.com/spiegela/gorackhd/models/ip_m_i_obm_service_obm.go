package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// IPMIObmServiceObm OBM settings
// swagger:model ipmi-obm-service_Obm
type IPMIObmServiceObm struct {

	// config
	// Required: true
	Config *IPMIObmServiceObmConfig `json:"config"`

	// node Id
	// Required: true
	NodeID *string `json:"nodeId"`

	// service
	// Required: true
	Service *string `json:"service"`
}

// Validate validates this ipmi obm service obm
func (m *IPMIObmServiceObm) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfig(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNodeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateService(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IPMIObmServiceObm) validateConfig(formats strfmt.Registry) error {

	if err := validate.Required("config", "body", m.Config); err != nil {
		return err
	}

	if m.Config != nil {

		if err := m.Config.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("config")
			}
			return err
		}
	}

	return nil
}

func (m *IPMIObmServiceObm) validateNodeID(formats strfmt.Registry) error {

	if err := validate.Required("nodeId", "body", m.NodeID); err != nil {
		return err
	}

	return nil
}

func (m *IPMIObmServiceObm) validateService(formats strfmt.Registry) error {

	if err := validate.Required("service", "body", m.Service); err != nil {
		return err
	}

	return nil
}

// IPMIObmServiceObmConfig IP m i obm service obm config
// swagger:model IPMIObmServiceObmConfig
type IPMIObmServiceObmConfig struct {

	// BMC address
	Host string `json:"host,omitempty"`

	// IPMI password
	Password string `json:"password,omitempty"`

	// IPMI username
	User string `json:"user,omitempty"`
}

// Validate validates this IP m i obm service obm config
func (m *IPMIObmServiceObmConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
