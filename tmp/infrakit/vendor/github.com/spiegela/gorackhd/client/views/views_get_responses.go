package views

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ViewsGetReader is a Reader for the ViewsGet structure.
type ViewsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ViewsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewViewsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewViewsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewViewsGetOK creates a ViewsGetOK with default headers values
func NewViewsGetOK() *ViewsGetOK {
	return &ViewsGetOK{}
}

/*ViewsGetOK handles this case with default header values.

Successfully retrieved views
*/
type ViewsGetOK struct {
	Payload ViewsGetOKBody
}

func (o *ViewsGetOK) Error() string {
	return fmt.Sprintf("[GET /views][%d] viewsGetOK  %+v", 200, o.Payload)
}

func (o *ViewsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewViewsGetDefault creates a ViewsGetDefault with default headers values
func NewViewsGetDefault(code int) *ViewsGetDefault {
	return &ViewsGetDefault{
		_statusCode: code,
	}
}

/*ViewsGetDefault handles this case with default header values.

Unexpected error
*/
type ViewsGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the views get default response
func (o *ViewsGetDefault) Code() int {
	return o._statusCode
}

func (o *ViewsGetDefault) Error() string {
	return fmt.Sprintf("[GET /views][%d] viewsGet default  %+v", o._statusCode, o.Payload)
}

func (o *ViewsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ViewsGetOKBody views get o k body
swagger:model ViewsGetOKBody
*/
type ViewsGetOKBody interface{}
