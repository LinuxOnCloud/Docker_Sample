package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// TemplatesLibPutReader is a Reader for the TemplatesLibPut structure.
type TemplatesLibPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TemplatesLibPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewTemplatesLibPutCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewTemplatesLibPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewTemplatesLibPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTemplatesLibPutCreated creates a TemplatesLibPutCreated with default headers values
func NewTemplatesLibPutCreated() *TemplatesLibPutCreated {
	return &TemplatesLibPutCreated{}
}

/*TemplatesLibPutCreated handles this case with default header values.

Successfully created or updated the specified template.
*/
type TemplatesLibPutCreated struct {
	Payload TemplatesLibPutCreatedBody
}

func (o *TemplatesLibPutCreated) Error() string {
	return fmt.Sprintf("[PUT /templates/library/{name}][%d] templatesLibPutCreated  %+v", 201, o.Payload)
}

func (o *TemplatesLibPutCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplatesLibPutNotFound creates a TemplatesLibPutNotFound with default headers values
func NewTemplatesLibPutNotFound() *TemplatesLibPutNotFound {
	return &TemplatesLibPutNotFound{}
}

/*TemplatesLibPutNotFound handles this case with default header values.

The specified template was not found.
*/
type TemplatesLibPutNotFound struct {
	Payload *models.Error
}

func (o *TemplatesLibPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /templates/library/{name}][%d] templatesLibPutNotFound  %+v", 404, o.Payload)
}

func (o *TemplatesLibPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplatesLibPutDefault creates a TemplatesLibPutDefault with default headers values
func NewTemplatesLibPutDefault(code int) *TemplatesLibPutDefault {
	return &TemplatesLibPutDefault{
		_statusCode: code,
	}
}

/*TemplatesLibPutDefault handles this case with default header values.

Unexpected error
*/
type TemplatesLibPutDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the templates lib put default response
func (o *TemplatesLibPutDefault) Code() int {
	return o._statusCode
}

func (o *TemplatesLibPutDefault) Error() string {
	return fmt.Sprintf("[PUT /templates/library/{name}][%d] templatesLibPut default  %+v", o._statusCode, o.Payload)
}

func (o *TemplatesLibPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*TemplatesLibPutCreatedBody templates lib put created body
swagger:model TemplatesLibPutCreatedBody
*/
type TemplatesLibPutCreatedBody interface{}
