package obms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ObmsPatchByIDReader is a Reader for the ObmsPatchByID structure.
type ObmsPatchByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObmsPatchByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewObmsPatchByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewObmsPatchByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewObmsPatchByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewObmsPatchByIDOK creates a ObmsPatchByIDOK with default headers values
func NewObmsPatchByIDOK() *ObmsPatchByIDOK {
	return &ObmsPatchByIDOK{}
}

/*ObmsPatchByIDOK handles this case with default header values.

Successfully patched the specified OBM settings
*/
type ObmsPatchByIDOK struct {
	Payload ObmsPatchByIDOKBody
}

func (o *ObmsPatchByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /obms/{identifier}][%d] obmsPatchByIdOK  %+v", 200, o.Payload)
}

func (o *ObmsPatchByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObmsPatchByIDInternalServerError creates a ObmsPatchByIDInternalServerError with default headers values
func NewObmsPatchByIDInternalServerError() *ObmsPatchByIDInternalServerError {
	return &ObmsPatchByIDInternalServerError{}
}

/*ObmsPatchByIDInternalServerError handles this case with default header values.

OBM patch failed
*/
type ObmsPatchByIDInternalServerError struct {
	Payload *models.Error
}

func (o *ObmsPatchByIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /obms/{identifier}][%d] obmsPatchByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *ObmsPatchByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObmsPatchByIDDefault creates a ObmsPatchByIDDefault with default headers values
func NewObmsPatchByIDDefault(code int) *ObmsPatchByIDDefault {
	return &ObmsPatchByIDDefault{
		_statusCode: code,
	}
}

/*ObmsPatchByIDDefault handles this case with default header values.

Unexpected error
*/
type ObmsPatchByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the obms patch by Id default response
func (o *ObmsPatchByIDDefault) Code() int {
	return o._statusCode
}

func (o *ObmsPatchByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /obms/{identifier}][%d] obmsPatchById default  %+v", o._statusCode, o.Payload)
}

func (o *ObmsPatchByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ObmsPatchByIDOKBody obms patch by ID o k body
swagger:model ObmsPatchByIDOKBody
*/
type ObmsPatchByIDOKBody interface{}
