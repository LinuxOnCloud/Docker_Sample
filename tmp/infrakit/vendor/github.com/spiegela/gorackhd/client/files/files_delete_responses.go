package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// FilesDeleteReader is a Reader for the FilesDelete structure.
type FilesDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FilesDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewFilesDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewFilesDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewFilesDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFilesDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFilesDeleteNoContent creates a FilesDeleteNoContent with default headers values
func NewFilesDeleteNoContent() *FilesDeleteNoContent {
	return &FilesDeleteNoContent{}
}

/*FilesDeleteNoContent handles this case with default header values.

File successfully deleted
*/
type FilesDeleteNoContent struct {
}

func (o *FilesDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /files/{fileidentifier}][%d] filesDeleteNoContent ", 204)
}

func (o *FilesDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFilesDeleteNotFound creates a FilesDeleteNotFound with default headers values
func NewFilesDeleteNotFound() *FilesDeleteNotFound {
	return &FilesDeleteNotFound{}
}

/*FilesDeleteNotFound handles this case with default header values.

File not found.
*/
type FilesDeleteNotFound struct {
	Payload *models.Error
}

func (o *FilesDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /files/{fileidentifier}][%d] filesDeleteNotFound  %+v", 404, o.Payload)
}

func (o *FilesDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilesDeleteInternalServerError creates a FilesDeleteInternalServerError with default headers values
func NewFilesDeleteInternalServerError() *FilesDeleteInternalServerError {
	return &FilesDeleteInternalServerError{}
}

/*FilesDeleteInternalServerError handles this case with default header values.

Error deleting file from the database
*/
type FilesDeleteInternalServerError struct {
	Payload *models.Error
}

func (o *FilesDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /files/{fileidentifier}][%d] filesDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *FilesDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilesDeleteDefault creates a FilesDeleteDefault with default headers values
func NewFilesDeleteDefault(code int) *FilesDeleteDefault {
	return &FilesDeleteDefault{
		_statusCode: code,
	}
}

/*FilesDeleteDefault handles this case with default header values.

Unexpected error
*/
type FilesDeleteDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the files delete default response
func (o *FilesDeleteDefault) Code() int {
	return o._statusCode
}

func (o *FilesDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /files/{fileidentifier}][%d] filesDelete default  %+v", o._statusCode, o.Payload)
}

func (o *FilesDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
