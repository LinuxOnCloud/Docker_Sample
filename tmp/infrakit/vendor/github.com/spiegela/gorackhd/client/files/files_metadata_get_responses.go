package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// FilesMetadataGetReader is a Reader for the FilesMetadataGet structure.
type FilesMetadataGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FilesMetadataGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFilesMetadataGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewFilesMetadataGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewFilesMetadataGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewFilesMetadataGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFilesMetadataGetOK creates a FilesMetadataGetOK with default headers values
func NewFilesMetadataGetOK() *FilesMetadataGetOK {
	return &FilesMetadataGetOK{}
}

/*FilesMetadataGetOK handles this case with default header values.

Successfully retrieved metadata of the specified file
*/
type FilesMetadataGetOK struct {
	Payload FilesMetadataGetOKBody
}

func (o *FilesMetadataGetOK) Error() string {
	return fmt.Sprintf("[GET /files/{filename}/metadata][%d] filesMetadataGetOK  %+v", 200, o.Payload)
}

func (o *FilesMetadataGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilesMetadataGetNotFound creates a FilesMetadataGetNotFound with default headers values
func NewFilesMetadataGetNotFound() *FilesMetadataGetNotFound {
	return &FilesMetadataGetNotFound{}
}

/*FilesMetadataGetNotFound handles this case with default header values.

File not found
*/
type FilesMetadataGetNotFound struct {
	Payload *models.Error
}

func (o *FilesMetadataGetNotFound) Error() string {
	return fmt.Sprintf("[GET /files/{filename}/metadata][%d] filesMetadataGetNotFound  %+v", 404, o.Payload)
}

func (o *FilesMetadataGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilesMetadataGetInternalServerError creates a FilesMetadataGetInternalServerError with default headers values
func NewFilesMetadataGetInternalServerError() *FilesMetadataGetInternalServerError {
	return &FilesMetadataGetInternalServerError{}
}

/*FilesMetadataGetInternalServerError handles this case with default header values.

Failed to serve file metadata request
*/
type FilesMetadataGetInternalServerError struct {
	Payload *models.Error
}

func (o *FilesMetadataGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /files/{filename}/metadata][%d] filesMetadataGetInternalServerError  %+v", 500, o.Payload)
}

func (o *FilesMetadataGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilesMetadataGetDefault creates a FilesMetadataGetDefault with default headers values
func NewFilesMetadataGetDefault(code int) *FilesMetadataGetDefault {
	return &FilesMetadataGetDefault{
		_statusCode: code,
	}
}

/*FilesMetadataGetDefault handles this case with default header values.

Unexpected error
*/
type FilesMetadataGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the files metadata get default response
func (o *FilesMetadataGetDefault) Code() int {
	return o._statusCode
}

func (o *FilesMetadataGetDefault) Error() string {
	return fmt.Sprintf("[GET /files/{filename}/metadata][%d] filesMetadataGet default  %+v", o._statusCode, o.Payload)
}

func (o *FilesMetadataGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*FilesMetadataGetOKBody files metadata get o k body
swagger:model FilesMetadataGetOKBody
*/
type FilesMetadataGetOKBody interface{}
