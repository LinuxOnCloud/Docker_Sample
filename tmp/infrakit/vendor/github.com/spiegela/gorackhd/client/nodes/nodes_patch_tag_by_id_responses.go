package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesPatchTagByIDReader is a Reader for the NodesPatchTagByID structure.
type NodesPatchTagByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesPatchTagByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNodesPatchTagByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewNodesPatchTagByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNodesPatchTagByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesPatchTagByIDOK creates a NodesPatchTagByIDOK with default headers values
func NewNodesPatchTagByIDOK() *NodesPatchTagByIDOK {
	return &NodesPatchTagByIDOK{}
}

/*NodesPatchTagByIDOK handles this case with default header values.

Successfully modified node tag(s).
*/
type NodesPatchTagByIDOK struct {
	Payload NodesPatchTagByIDOKBody
}

func (o *NodesPatchTagByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /nodes/{identifier}/tags][%d] nodesPatchTagByIdOK  %+v", 200, o.Payload)
}

func (o *NodesPatchTagByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesPatchTagByIDNotFound creates a NodesPatchTagByIDNotFound with default headers values
func NewNodesPatchTagByIDNotFound() *NodesPatchTagByIDNotFound {
	return &NodesPatchTagByIDNotFound{}
}

/*NodesPatchTagByIDNotFound handles this case with default header values.

The specified node was not found.
*/
type NodesPatchTagByIDNotFound struct {
	Payload *models.Error
}

func (o *NodesPatchTagByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /nodes/{identifier}/tags][%d] nodesPatchTagByIdNotFound  %+v", 404, o.Payload)
}

func (o *NodesPatchTagByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesPatchTagByIDDefault creates a NodesPatchTagByIDDefault with default headers values
func NewNodesPatchTagByIDDefault(code int) *NodesPatchTagByIDDefault {
	return &NodesPatchTagByIDDefault{
		_statusCode: code,
	}
}

/*NodesPatchTagByIDDefault handles this case with default header values.

Unexpected error
*/
type NodesPatchTagByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes patch tag by Id default response
func (o *NodesPatchTagByIDDefault) Code() int {
	return o._statusCode
}

func (o *NodesPatchTagByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /nodes/{identifier}/tags][%d] nodesPatchTagById default  %+v", o._statusCode, o.Payload)
}

func (o *NodesPatchTagByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NodesPatchTagByIDOKBody nodes patch tag by ID o k body
swagger:model NodesPatchTagByIDOKBody
*/
type NodesPatchTagByIDOKBody interface{}
