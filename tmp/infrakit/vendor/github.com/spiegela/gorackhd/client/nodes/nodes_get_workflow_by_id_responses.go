package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesGetWorkflowByIDReader is a Reader for the NodesGetWorkflowByID structure.
type NodesGetWorkflowByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesGetWorkflowByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNodesGetWorkflowByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewNodesGetWorkflowByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNodesGetWorkflowByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesGetWorkflowByIDOK creates a NodesGetWorkflowByIDOK with default headers values
func NewNodesGetWorkflowByIDOK() *NodesGetWorkflowByIDOK {
	return &NodesGetWorkflowByIDOK{}
}

/*NodesGetWorkflowByIDOK handles this case with default header values.

Successfully retrieved the workflows for specified node
*/
type NodesGetWorkflowByIDOK struct {
	Payload []interface{}
}

func (o *NodesGetWorkflowByIDOK) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/workflows][%d] nodesGetWorkflowByIdOK  %+v", 200, o.Payload)
}

func (o *NodesGetWorkflowByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesGetWorkflowByIDNotFound creates a NodesGetWorkflowByIDNotFound with default headers values
func NewNodesGetWorkflowByIDNotFound() *NodesGetWorkflowByIDNotFound {
	return &NodesGetWorkflowByIDNotFound{}
}

/*NodesGetWorkflowByIDNotFound handles this case with default header values.

The specified node was not found.
*/
type NodesGetWorkflowByIDNotFound struct {
	Payload *models.Error
}

func (o *NodesGetWorkflowByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/workflows][%d] nodesGetWorkflowByIdNotFound  %+v", 404, o.Payload)
}

func (o *NodesGetWorkflowByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesGetWorkflowByIDDefault creates a NodesGetWorkflowByIDDefault with default headers values
func NewNodesGetWorkflowByIDDefault(code int) *NodesGetWorkflowByIDDefault {
	return &NodesGetWorkflowByIDDefault{
		_statusCode: code,
	}
}

/*NodesGetWorkflowByIDDefault handles this case with default header values.

Unexpected error
*/
type NodesGetWorkflowByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes get workflow by Id default response
func (o *NodesGetWorkflowByIDDefault) Code() int {
	return o._statusCode
}

func (o *NodesGetWorkflowByIDDefault) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/workflows][%d] nodesGetWorkflowById default  %+v", o._statusCode, o.Payload)
}

func (o *NodesGetWorkflowByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
