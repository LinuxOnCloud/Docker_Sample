package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesPostSSHByIDReader is a Reader for the NodesPostSSHByID structure.
type NodesPostSSHByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesPostSSHByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewNodesPostSSHByIDCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewNodesPostSSHByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNodesPostSSHByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesPostSSHByIDCreated creates a NodesPostSSHByIDCreated with default headers values
func NewNodesPostSSHByIDCreated() *NodesPostSSHByIDCreated {
	return &NodesPostSSHByIDCreated{}
}

/*NodesPostSSHByIDCreated handles this case with default header values.

Successfull created ssh settings
*/
type NodesPostSSHByIDCreated struct {
}

func (o *NodesPostSSHByIDCreated) Error() string {
	return fmt.Sprintf("[POST /nodes/{identifier}/ssh][%d] nodesPostSshByIdCreated ", 201)
}

func (o *NodesPostSSHByIDCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNodesPostSSHByIDNotFound creates a NodesPostSSHByIDNotFound with default headers values
func NewNodesPostSSHByIDNotFound() *NodesPostSSHByIDNotFound {
	return &NodesPostSSHByIDNotFound{}
}

/*NodesPostSSHByIDNotFound handles this case with default header values.

The specified node was not found or has no ssh settings.
*/
type NodesPostSSHByIDNotFound struct {
	Payload *models.Error
}

func (o *NodesPostSSHByIDNotFound) Error() string {
	return fmt.Sprintf("[POST /nodes/{identifier}/ssh][%d] nodesPostSshByIdNotFound  %+v", 404, o.Payload)
}

func (o *NodesPostSSHByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesPostSSHByIDDefault creates a NodesPostSSHByIDDefault with default headers values
func NewNodesPostSSHByIDDefault(code int) *NodesPostSSHByIDDefault {
	return &NodesPostSSHByIDDefault{
		_statusCode: code,
	}
}

/*NodesPostSSHByIDDefault handles this case with default header values.

Unexpected error
*/
type NodesPostSSHByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes post Ssh by Id default response
func (o *NodesPostSSHByIDDefault) Code() int {
	return o._statusCode
}

func (o *NodesPostSSHByIDDefault) Error() string {
	return fmt.Sprintf("[POST /nodes/{identifier}/ssh][%d] nodesPostSshById default  %+v", o._statusCode, o.Payload)
}

func (o *NodesPostSSHByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
