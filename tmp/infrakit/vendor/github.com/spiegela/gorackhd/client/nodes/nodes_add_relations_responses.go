package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesAddRelationsReader is a Reader for the NodesAddRelations structure.
type NodesAddRelationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesAddRelationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNodesAddRelationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewNodesAddRelationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNodesAddRelationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesAddRelationsOK creates a NodesAddRelationsOK with default headers values
func NewNodesAddRelationsOK() *NodesAddRelationsOK {
	return &NodesAddRelationsOK{}
}

/*NodesAddRelationsOK handles this case with default header values.

Node relations update succeeded.
*/
type NodesAddRelationsOK struct {
	Payload NodesAddRelationsOKBody
}

func (o *NodesAddRelationsOK) Error() string {
	return fmt.Sprintf("[PUT /nodes/{identifier}/relations][%d] nodesAddRelationsOK  %+v", 200, o.Payload)
}

func (o *NodesAddRelationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesAddRelationsNotFound creates a NodesAddRelationsNotFound with default headers values
func NewNodesAddRelationsNotFound() *NodesAddRelationsNotFound {
	return &NodesAddRelationsNotFound{}
}

/*NodesAddRelationsNotFound handles this case with default header values.

The specified node was not found.
*/
type NodesAddRelationsNotFound struct {
	Payload *models.Error
}

func (o *NodesAddRelationsNotFound) Error() string {
	return fmt.Sprintf("[PUT /nodes/{identifier}/relations][%d] nodesAddRelationsNotFound  %+v", 404, o.Payload)
}

func (o *NodesAddRelationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesAddRelationsDefault creates a NodesAddRelationsDefault with default headers values
func NewNodesAddRelationsDefault(code int) *NodesAddRelationsDefault {
	return &NodesAddRelationsDefault{
		_statusCode: code,
	}
}

/*NodesAddRelationsDefault handles this case with default header values.

Unexpected error
*/
type NodesAddRelationsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes add relations default response
func (o *NodesAddRelationsDefault) Code() int {
	return o._statusCode
}

func (o *NodesAddRelationsDefault) Error() string {
	return fmt.Sprintf("[PUT /nodes/{identifier}/relations][%d] nodesAddRelations default  %+v", o._statusCode, o.Payload)
}

func (o *NodesAddRelationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NodesAddRelationsOKBody nodes add relations o k body
swagger:model NodesAddRelationsOKBody
*/
type NodesAddRelationsOKBody interface{}
