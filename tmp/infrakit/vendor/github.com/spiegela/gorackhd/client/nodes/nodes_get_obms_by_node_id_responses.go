package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesGetObmsByNodeIDReader is a Reader for the NodesGetObmsByNodeID structure.
type NodesGetObmsByNodeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesGetObmsByNodeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNodesGetObmsByNodeIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewNodesGetObmsByNodeIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesGetObmsByNodeIDOK creates a NodesGetObmsByNodeIDOK with default headers values
func NewNodesGetObmsByNodeIDOK() *NodesGetObmsByNodeIDOK {
	return &NodesGetObmsByNodeIDOK{}
}

/*NodesGetObmsByNodeIDOK handles this case with default header values.

Successfully retrieved the specified OBM service
*/
type NodesGetObmsByNodeIDOK struct {
	Payload []*models.Obm
}

func (o *NodesGetObmsByNodeIDOK) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/obm][%d] nodesGetObmsByNodeIdOK  %+v", 200, o.Payload)
}

func (o *NodesGetObmsByNodeIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesGetObmsByNodeIDDefault creates a NodesGetObmsByNodeIDDefault with default headers values
func NewNodesGetObmsByNodeIDDefault(code int) *NodesGetObmsByNodeIDDefault {
	return &NodesGetObmsByNodeIDDefault{
		_statusCode: code,
	}
}

/*NodesGetObmsByNodeIDDefault handles this case with default header values.

Unexpected error
*/
type NodesGetObmsByNodeIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes get obms by node Id default response
func (o *NodesGetObmsByNodeIDDefault) Code() int {
	return o._statusCode
}

func (o *NodesGetObmsByNodeIDDefault) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/obm][%d] nodesGetObmsByNodeId default  %+v", o._statusCode, o.Payload)
}

func (o *NodesGetObmsByNodeIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
