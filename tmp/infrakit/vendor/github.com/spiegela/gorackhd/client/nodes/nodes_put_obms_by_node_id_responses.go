package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesPutObmsByNodeIDReader is a Reader for the NodesPutObmsByNodeID structure.
type NodesPutObmsByNodeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesPutObmsByNodeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewNodesPutObmsByNodeIDCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewNodesPutObmsByNodeIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNodesPutObmsByNodeIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesPutObmsByNodeIDCreated creates a NodesPutObmsByNodeIDCreated with default headers values
func NewNodesPutObmsByNodeIDCreated() *NodesPutObmsByNodeIDCreated {
	return &NodesPutObmsByNodeIDCreated{}
}

/*NodesPutObmsByNodeIDCreated handles this case with default header values.

Successfully put the OBM service
*/
type NodesPutObmsByNodeIDCreated struct {
	Payload NodesPutObmsByNodeIDCreatedBody
}

func (o *NodesPutObmsByNodeIDCreated) Error() string {
	return fmt.Sprintf("[PUT /nodes/{identifier}/obm][%d] nodesPutObmsByNodeIdCreated  %+v", 201, o.Payload)
}

func (o *NodesPutObmsByNodeIDCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesPutObmsByNodeIDInternalServerError creates a NodesPutObmsByNodeIDInternalServerError with default headers values
func NewNodesPutObmsByNodeIDInternalServerError() *NodesPutObmsByNodeIDInternalServerError {
	return &NodesPutObmsByNodeIDInternalServerError{}
}

/*NodesPutObmsByNodeIDInternalServerError handles this case with default header values.

OBM service creation failed
*/
type NodesPutObmsByNodeIDInternalServerError struct {
	Payload *models.Error
}

func (o *NodesPutObmsByNodeIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /nodes/{identifier}/obm][%d] nodesPutObmsByNodeIdInternalServerError  %+v", 500, o.Payload)
}

func (o *NodesPutObmsByNodeIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesPutObmsByNodeIDDefault creates a NodesPutObmsByNodeIDDefault with default headers values
func NewNodesPutObmsByNodeIDDefault(code int) *NodesPutObmsByNodeIDDefault {
	return &NodesPutObmsByNodeIDDefault{
		_statusCode: code,
	}
}

/*NodesPutObmsByNodeIDDefault handles this case with default header values.

Unexpected error
*/
type NodesPutObmsByNodeIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes put obms by node Id default response
func (o *NodesPutObmsByNodeIDDefault) Code() int {
	return o._statusCode
}

func (o *NodesPutObmsByNodeIDDefault) Error() string {
	return fmt.Sprintf("[PUT /nodes/{identifier}/obm][%d] nodesPutObmsByNodeId default  %+v", o._statusCode, o.Payload)
}

func (o *NodesPutObmsByNodeIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NodesPutObmsByNodeIDCreatedBody nodes put obms by node ID created body
swagger:model NodesPutObmsByNodeIDCreatedBody
*/
type NodesPutObmsByNodeIDCreatedBody interface{}
