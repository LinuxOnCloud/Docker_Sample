package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NodesGetTagsByIDReader is a Reader for the NodesGetTagsByID structure.
type NodesGetTagsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesGetTagsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNodesGetTagsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewNodesGetTagsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNodesGetTagsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesGetTagsByIDOK creates a NodesGetTagsByIDOK with default headers values
func NewNodesGetTagsByIDOK() *NodesGetTagsByIDOK {
	return &NodesGetTagsByIDOK{}
}

/*NodesGetTagsByIDOK handles this case with default header values.

Successfully retrieved node tags
*/
type NodesGetTagsByIDOK struct {
	Payload []string
}

func (o *NodesGetTagsByIDOK) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/tags][%d] nodesGetTagsByIdOK  %+v", 200, o.Payload)
}

func (o *NodesGetTagsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesGetTagsByIDNotFound creates a NodesGetTagsByIDNotFound with default headers values
func NewNodesGetTagsByIDNotFound() *NodesGetTagsByIDNotFound {
	return &NodesGetTagsByIDNotFound{}
}

/*NodesGetTagsByIDNotFound handles this case with default header values.

The specified node was not found.
*/
type NodesGetTagsByIDNotFound struct {
	Payload *models.Error
}

func (o *NodesGetTagsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/tags][%d] nodesGetTagsByIdNotFound  %+v", 404, o.Payload)
}

func (o *NodesGetTagsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesGetTagsByIDDefault creates a NodesGetTagsByIDDefault with default headers values
func NewNodesGetTagsByIDDefault(code int) *NodesGetTagsByIDDefault {
	return &NodesGetTagsByIDDefault{
		_statusCode: code,
	}
}

/*NodesGetTagsByIDDefault handles this case with default header values.

Unexpected error
*/
type NodesGetTagsByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the nodes get tags by Id default response
func (o *NodesGetTagsByIDDefault) Code() int {
	return o._statusCode
}

func (o *NodesGetTagsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /nodes/{identifier}/tags][%d] nodesGetTagsById default  %+v", o._statusCode, o.Payload)
}

func (o *NodesGetTagsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
