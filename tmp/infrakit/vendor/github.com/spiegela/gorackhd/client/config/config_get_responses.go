package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ConfigGetReader is a Reader for the ConfigGet structure.
type ConfigGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfigGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConfigGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewConfigGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConfigGetOK creates a ConfigGetOK with default headers values
func NewConfigGetOK() *ConfigGetOK {
	return &ConfigGetOK{}
}

/*ConfigGetOK handles this case with default header values.

Successfully retrieved the configuration
*/
type ConfigGetOK struct {
	Payload ConfigGetOKBody
}

func (o *ConfigGetOK) Error() string {
	return fmt.Sprintf("[GET /config][%d] configGetOK  %+v", 200, o.Payload)
}

func (o *ConfigGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigGetDefault creates a ConfigGetDefault with default headers values
func NewConfigGetDefault(code int) *ConfigGetDefault {
	return &ConfigGetDefault{
		_statusCode: code,
	}
}

/*ConfigGetDefault handles this case with default header values.

Unexpected error
*/
type ConfigGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the config get default response
func (o *ConfigGetDefault) Code() int {
	return o._statusCode
}

func (o *ConfigGetDefault) Error() string {
	return fmt.Sprintf("[GET /config][%d] configGet default  %+v", o._statusCode, o.Payload)
}

func (o *ConfigGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ConfigGetOKBody config get o k body
swagger:model ConfigGetOKBody
*/
type ConfigGetOKBody interface{}
