package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ListRolesReader is a Reader for the ListRoles structure.
type ListRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListRolesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRolesOK creates a ListRolesOK with default headers values
func NewListRolesOK() *ListRolesOK {
	return &ListRolesOK{}
}

/*ListRolesOK handles this case with default header values.

Successfully retrieved the list of roles
*/
type ListRolesOK struct {
}

func (o *ListRolesOK) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRolesOK ", 200)
}

func (o *ListRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRolesUnauthorized creates a ListRolesUnauthorized with default headers values
func NewListRolesUnauthorized() *ListRolesUnauthorized {
	return &ListRolesUnauthorized{}
}

/*ListRolesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListRolesUnauthorized struct {
	Payload ListRolesUnauthorizedBody
}

func (o *ListRolesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRolesForbidden creates a ListRolesForbidden with default headers values
func NewListRolesForbidden() *ListRolesForbidden {
	return &ListRolesForbidden{}
}

/*ListRolesForbidden handles this case with default header values.

Forbidden
*/
type ListRolesForbidden struct {
	Payload ListRolesForbiddenBody
}

func (o *ListRolesForbidden) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRolesForbidden  %+v", 403, o.Payload)
}

func (o *ListRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRolesDefault creates a ListRolesDefault with default headers values
func NewListRolesDefault(code int) *ListRolesDefault {
	return &ListRolesDefault{
		_statusCode: code,
	}
}

/*ListRolesDefault handles this case with default header values.

Unexpected error
*/
type ListRolesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list roles default response
func (o *ListRolesDefault) Code() int {
	return o._statusCode
}

func (o *ListRolesDefault) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoles default  %+v", o._statusCode, o.Payload)
}

func (o *ListRolesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListRolesForbiddenBody list roles forbidden body
swagger:model ListRolesForbiddenBody
*/
type ListRolesForbiddenBody interface{}

/*ListRolesUnauthorizedBody list roles unauthorized body
swagger:model ListRolesUnauthorizedBody
*/
type ListRolesUnauthorizedBody interface{}
