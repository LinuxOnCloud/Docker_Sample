package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// AddRoleReader is a Reader for the AddRole structure.
type AddRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddRoleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewAddRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAddRoleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddRoleCreated creates a AddRoleCreated with default headers values
func NewAddRoleCreated() *AddRoleCreated {
	return &AddRoleCreated{}
}

/*AddRoleCreated handles this case with default header values.

Successfully created a new role
*/
type AddRoleCreated struct {
	Payload AddRoleCreatedBody
}

func (o *AddRoleCreated) Error() string {
	return fmt.Sprintf("[POST /roles][%d] addRoleCreated  %+v", 201, o.Payload)
}

func (o *AddRoleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRoleUnauthorized creates a AddRoleUnauthorized with default headers values
func NewAddRoleUnauthorized() *AddRoleUnauthorized {
	return &AddRoleUnauthorized{}
}

/*AddRoleUnauthorized handles this case with default header values.

Unauthorized
*/
type AddRoleUnauthorized struct {
	Payload AddRoleUnauthorizedBody
}

func (o *AddRoleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /roles][%d] addRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *AddRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRoleForbidden creates a AddRoleForbidden with default headers values
func NewAddRoleForbidden() *AddRoleForbidden {
	return &AddRoleForbidden{}
}

/*AddRoleForbidden handles this case with default header values.

Forbidden
*/
type AddRoleForbidden struct {
	Payload AddRoleForbiddenBody
}

func (o *AddRoleForbidden) Error() string {
	return fmt.Sprintf("[POST /roles][%d] addRoleForbidden  %+v", 403, o.Payload)
}

func (o *AddRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRoleDefault creates a AddRoleDefault with default headers values
func NewAddRoleDefault(code int) *AddRoleDefault {
	return &AddRoleDefault{
		_statusCode: code,
	}
}

/*AddRoleDefault handles this case with default header values.

Unexpected error
*/
type AddRoleDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the add role default response
func (o *AddRoleDefault) Code() int {
	return o._statusCode
}

func (o *AddRoleDefault) Error() string {
	return fmt.Sprintf("[POST /roles][%d] addRole default  %+v", o._statusCode, o.Payload)
}

func (o *AddRoleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AddRoleCreatedBody add role created body
swagger:model AddRoleCreatedBody
*/
type AddRoleCreatedBody interface{}

/*AddRoleForbiddenBody add role forbidden body
swagger:model AddRoleForbiddenBody
*/
type AddRoleForbiddenBody interface{}

/*AddRoleUnauthorizedBody add role unauthorized body
swagger:model AddRoleUnauthorizedBody
*/
type AddRoleUnauthorizedBody interface{}
