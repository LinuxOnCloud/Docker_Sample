package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// DeleteTagReader is a Reader for the DeleteTag structure.
type DeleteTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteTagNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteTagDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteTagNoContent creates a DeleteTagNoContent with default headers values
func NewDeleteTagNoContent() *DeleteTagNoContent {
	return &DeleteTagNoContent{}
}

/*DeleteTagNoContent handles this case with default header values.

Successfully deleted the specified tag.
*/
type DeleteTagNoContent struct {
	Payload DeleteTagNoContentBody
}

func (o *DeleteTagNoContent) Error() string {
	return fmt.Sprintf("[DELETE /tags/{tagName}][%d] deleteTagNoContent  %+v", 204, o.Payload)
}

func (o *DeleteTagNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagNotFound creates a DeleteTagNotFound with default headers values
func NewDeleteTagNotFound() *DeleteTagNotFound {
	return &DeleteTagNotFound{}
}

/*DeleteTagNotFound handles this case with default header values.

The tag with the specified name was not found.
*/
type DeleteTagNotFound struct {
	Payload *models.Error
}

func (o *DeleteTagNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tags/{tagName}][%d] deleteTagNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagDefault creates a DeleteTagDefault with default headers values
func NewDeleteTagDefault(code int) *DeleteTagDefault {
	return &DeleteTagDefault{
		_statusCode: code,
	}
}

/*DeleteTagDefault handles this case with default header values.

Unexpected error
*/
type DeleteTagDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete tag default response
func (o *DeleteTagDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTagDefault) Error() string {
	return fmt.Sprintf("[DELETE /tags/{tagName}][%d] deleteTag default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTagDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteTagNoContentBody delete tag no content body
swagger:model DeleteTagNoContentBody
*/
type DeleteTagNoContentBody interface{}
