package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// GetNodesByTagReader is a Reader for the GetNodesByTag structure.
type GetNodesByTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesByTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNodesByTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetNodesByTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetNodesByTagDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNodesByTagOK creates a GetNodesByTagOK with default headers values
func NewGetNodesByTagOK() *GetNodesByTagOK {
	return &GetNodesByTagOK{}
}

/*GetNodesByTagOK handles this case with default header values.

Successfully retrieved the list of nodes with the specified tag
*/
type GetNodesByTagOK struct {
	Payload []interface{}
}

func (o *GetNodesByTagOK) Error() string {
	return fmt.Sprintf("[GET /tags/{tagName}/nodes][%d] getNodesByTagOK  %+v", 200, o.Payload)
}

func (o *GetNodesByTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodesByTagNotFound creates a GetNodesByTagNotFound with default headers values
func NewGetNodesByTagNotFound() *GetNodesByTagNotFound {
	return &GetNodesByTagNotFound{}
}

/*GetNodesByTagNotFound handles this case with default header values.

The specified tag was not found
*/
type GetNodesByTagNotFound struct {
	Payload *models.Error
}

func (o *GetNodesByTagNotFound) Error() string {
	return fmt.Sprintf("[GET /tags/{tagName}/nodes][%d] getNodesByTagNotFound  %+v", 404, o.Payload)
}

func (o *GetNodesByTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodesByTagDefault creates a GetNodesByTagDefault with default headers values
func NewGetNodesByTagDefault(code int) *GetNodesByTagDefault {
	return &GetNodesByTagDefault{
		_statusCode: code,
	}
}

/*GetNodesByTagDefault handles this case with default header values.

Unexpected error
*/
type GetNodesByTagDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get nodes by tag default response
func (o *GetNodesByTagDefault) Code() int {
	return o._statusCode
}

func (o *GetNodesByTagDefault) Error() string {
	return fmt.Sprintf("[GET /tags/{tagName}/nodes][%d] getNodesByTag default  %+v", o._statusCode, o.Payload)
}

func (o *GetNodesByTagDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
