package profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ProfilesPostSwitchErrorReader is a Reader for the ProfilesPostSwitchError structure.
type ProfilesPostSwitchErrorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfilesPostSwitchErrorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewProfilesPostSwitchErrorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewProfilesPostSwitchErrorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewProfilesPostSwitchErrorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfilesPostSwitchErrorCreated creates a ProfilesPostSwitchErrorCreated with default headers values
func NewProfilesPostSwitchErrorCreated() *ProfilesPostSwitchErrorCreated {
	return &ProfilesPostSwitchErrorCreated{}
}

/*ProfilesPostSwitchErrorCreated handles this case with default header values.

Successfully posted the switch error
*/
type ProfilesPostSwitchErrorCreated struct {
	Payload ProfilesPostSwitchErrorCreatedBody
}

func (o *ProfilesPostSwitchErrorCreated) Error() string {
	return fmt.Sprintf("[POST /profiles/switch/error][%d] profilesPostSwitchErrorCreated  %+v", 201, o.Payload)
}

func (o *ProfilesPostSwitchErrorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfilesPostSwitchErrorInternalServerError creates a ProfilesPostSwitchErrorInternalServerError with default headers values
func NewProfilesPostSwitchErrorInternalServerError() *ProfilesPostSwitchErrorInternalServerError {
	return &ProfilesPostSwitchErrorInternalServerError{}
}

/*ProfilesPostSwitchErrorInternalServerError handles this case with default header values.

Upload failed
*/
type ProfilesPostSwitchErrorInternalServerError struct {
	Payload *models.Error
}

func (o *ProfilesPostSwitchErrorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /profiles/switch/error][%d] profilesPostSwitchErrorInternalServerError  %+v", 500, o.Payload)
}

func (o *ProfilesPostSwitchErrorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfilesPostSwitchErrorDefault creates a ProfilesPostSwitchErrorDefault with default headers values
func NewProfilesPostSwitchErrorDefault(code int) *ProfilesPostSwitchErrorDefault {
	return &ProfilesPostSwitchErrorDefault{
		_statusCode: code,
	}
}

/*ProfilesPostSwitchErrorDefault handles this case with default header values.

Unexpected error
*/
type ProfilesPostSwitchErrorDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the profiles post switch error default response
func (o *ProfilesPostSwitchErrorDefault) Code() int {
	return o._statusCode
}

func (o *ProfilesPostSwitchErrorDefault) Error() string {
	return fmt.Sprintf("[POST /profiles/switch/error][%d] profilesPostSwitchError default  %+v", o._statusCode, o.Payload)
}

func (o *ProfilesPostSwitchErrorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ProfilesPostSwitchErrorCreatedBody profiles post switch error created body
swagger:model ProfilesPostSwitchErrorCreatedBody
*/
type ProfilesPostSwitchErrorCreatedBody interface{}
