package profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ProfilesGetMetadataByNameReader is a Reader for the ProfilesGetMetadataByName structure.
type ProfilesGetMetadataByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfilesGetMetadataByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProfilesGetMetadataByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProfilesGetMetadataByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewProfilesGetMetadataByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfilesGetMetadataByNameOK creates a ProfilesGetMetadataByNameOK with default headers values
func NewProfilesGetMetadataByNameOK() *ProfilesGetMetadataByNameOK {
	return &ProfilesGetMetadataByNameOK{}
}

/*ProfilesGetMetadataByNameOK handles this case with default header values.

Successfully returned the profile
*/
type ProfilesGetMetadataByNameOK struct {
	Payload ProfilesGetMetadataByNameOKBody
}

func (o *ProfilesGetMetadataByNameOK) Error() string {
	return fmt.Sprintf("[GET /profiles/metadata/{name}][%d] profilesGetMetadataByNameOK  %+v", 200, o.Payload)
}

func (o *ProfilesGetMetadataByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfilesGetMetadataByNameNotFound creates a ProfilesGetMetadataByNameNotFound with default headers values
func NewProfilesGetMetadataByNameNotFound() *ProfilesGetMetadataByNameNotFound {
	return &ProfilesGetMetadataByNameNotFound{}
}

/*ProfilesGetMetadataByNameNotFound handles this case with default header values.

The profile with the specified identifier was not found
*/
type ProfilesGetMetadataByNameNotFound struct {
	Payload *models.Error
}

func (o *ProfilesGetMetadataByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /profiles/metadata/{name}][%d] profilesGetMetadataByNameNotFound  %+v", 404, o.Payload)
}

func (o *ProfilesGetMetadataByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfilesGetMetadataByNameDefault creates a ProfilesGetMetadataByNameDefault with default headers values
func NewProfilesGetMetadataByNameDefault(code int) *ProfilesGetMetadataByNameDefault {
	return &ProfilesGetMetadataByNameDefault{
		_statusCode: code,
	}
}

/*ProfilesGetMetadataByNameDefault handles this case with default header values.

Unexpected error
*/
type ProfilesGetMetadataByNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the profiles get metadata by name default response
func (o *ProfilesGetMetadataByNameDefault) Code() int {
	return o._statusCode
}

func (o *ProfilesGetMetadataByNameDefault) Error() string {
	return fmt.Sprintf("[GET /profiles/metadata/{name}][%d] profilesGetMetadataByName default  %+v", o._statusCode, o.Payload)
}

func (o *ProfilesGetMetadataByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ProfilesGetMetadataByNameOKBody profiles get metadata by name o k body
swagger:model ProfilesGetMetadataByNameOKBody
*/
type ProfilesGetMetadataByNameOKBody interface{}
