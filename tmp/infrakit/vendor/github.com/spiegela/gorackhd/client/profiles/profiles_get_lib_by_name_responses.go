package profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// ProfilesGetLibByNameReader is a Reader for the ProfilesGetLibByName structure.
type ProfilesGetLibByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfilesGetLibByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProfilesGetLibByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewProfilesGetLibByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewProfilesGetLibByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfilesGetLibByNameOK creates a ProfilesGetLibByNameOK with default headers values
func NewProfilesGetLibByNameOK() *ProfilesGetLibByNameOK {
	return &ProfilesGetLibByNameOK{}
}

/*ProfilesGetLibByNameOK handles this case with default header values.

Successfully returned profile
*/
type ProfilesGetLibByNameOK struct {
	Payload ProfilesGetLibByNameOKBody
}

func (o *ProfilesGetLibByNameOK) Error() string {
	return fmt.Sprintf("[GET /profiles/library/{name}][%d] profilesGetLibByNameOK  %+v", 200, o.Payload)
}

func (o *ProfilesGetLibByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfilesGetLibByNameNotFound creates a ProfilesGetLibByNameNotFound with default headers values
func NewProfilesGetLibByNameNotFound() *ProfilesGetLibByNameNotFound {
	return &ProfilesGetLibByNameNotFound{}
}

/*ProfilesGetLibByNameNotFound handles this case with default header values.

The profile with the specified name was not found
*/
type ProfilesGetLibByNameNotFound struct {
	Payload *models.Error
}

func (o *ProfilesGetLibByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /profiles/library/{name}][%d] profilesGetLibByNameNotFound  %+v", 404, o.Payload)
}

func (o *ProfilesGetLibByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfilesGetLibByNameDefault creates a ProfilesGetLibByNameDefault with default headers values
func NewProfilesGetLibByNameDefault(code int) *ProfilesGetLibByNameDefault {
	return &ProfilesGetLibByNameDefault{
		_statusCode: code,
	}
}

/*ProfilesGetLibByNameDefault handles this case with default header values.

Unexpected error
*/
type ProfilesGetLibByNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the profiles get lib by name default response
func (o *ProfilesGetLibByNameDefault) Code() int {
	return o._statusCode
}

func (o *ProfilesGetLibByNameDefault) Error() string {
	return fmt.Sprintf("[GET /profiles/library/{name}][%d] profilesGetLibByName default  %+v", o._statusCode, o.Payload)
}

func (o *ProfilesGetLibByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ProfilesGetLibByNameOKBody profiles get lib by name o k body
swagger:model ProfilesGetLibByNameOKBody
*/
type ProfilesGetLibByNameOKBody interface{}
