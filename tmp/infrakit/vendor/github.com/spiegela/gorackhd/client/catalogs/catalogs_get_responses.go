package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// CatalogsGetReader is a Reader for the CatalogsGet structure.
type CatalogsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewCatalogsGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogsGetOK creates a CatalogsGetOK with default headers values
func NewCatalogsGetOK() *CatalogsGetOK {
	return &CatalogsGetOK{}
}

/*CatalogsGetOK handles this case with default header values.

Successfully retrieved a list of catalogs
*/
type CatalogsGetOK struct {
	Payload *models.VersionsResponse
}

func (o *CatalogsGetOK) Error() string {
	return fmt.Sprintf("[GET /catalogs][%d] catalogsGetOK  %+v", 200, o.Payload)
}

func (o *CatalogsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogsGetDefault creates a CatalogsGetDefault with default headers values
func NewCatalogsGetDefault(code int) *CatalogsGetDefault {
	return &CatalogsGetDefault{
		_statusCode: code,
	}
}

/*CatalogsGetDefault handles this case with default header values.

Error
*/
type CatalogsGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalogs get default response
func (o *CatalogsGetDefault) Code() int {
	return o._statusCode
}

func (o *CatalogsGetDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs][%d] catalogsGet default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogsGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
