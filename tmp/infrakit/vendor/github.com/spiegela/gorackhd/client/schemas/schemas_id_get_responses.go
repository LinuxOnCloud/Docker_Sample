package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// SchemasIDGetReader is a Reader for the SchemasIDGet structure.
type SchemasIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchemasIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSchemasIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewSchemasIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSchemasIDGetOK creates a SchemasIDGetOK with default headers values
func NewSchemasIDGetOK() *SchemasIDGetOK {
	return &SchemasIDGetOK{}
}

/*SchemasIDGetOK handles this case with default header values.

Successfully retrieved the schema
*/
type SchemasIDGetOK struct {
	Payload SchemasIDGetOKBody
}

func (o *SchemasIDGetOK) Error() string {
	return fmt.Sprintf("[GET /schemas/{identifier}][%d] schemasIdGetOK  %+v", 200, o.Payload)
}

func (o *SchemasIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemasIDGetDefault creates a SchemasIDGetDefault with default headers values
func NewSchemasIDGetDefault(code int) *SchemasIDGetDefault {
	return &SchemasIDGetDefault{
		_statusCode: code,
	}
}

/*SchemasIDGetDefault handles this case with default header values.

Error
*/
type SchemasIDGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the schemas Id get default response
func (o *SchemasIDGetDefault) Code() int {
	return o._statusCode
}

func (o *SchemasIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /schemas/{identifier}][%d] schemasIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *SchemasIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SchemasIDGetOKBody schemas ID get o k body
swagger:model SchemasIDGetOKBody
*/
type SchemasIDGetOKBody interface{}
