package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// TaskSchemasGetReader is a Reader for the TaskSchemasGet structure.
type TaskSchemasGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TaskSchemasGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTaskSchemasGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewTaskSchemasGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTaskSchemasGetOK creates a TaskSchemasGetOK with default headers values
func NewTaskSchemasGetOK() *TaskSchemasGetOK {
	return &TaskSchemasGetOK{}
}

/*TaskSchemasGetOK handles this case with default header values.

Successfully retrieved the list of task schema names
*/
type TaskSchemasGetOK struct {
	Payload TaskSchemasGetOKBody
}

func (o *TaskSchemasGetOK) Error() string {
	return fmt.Sprintf("[GET /schemas/tasks][%d] taskSchemasGetOK  %+v", 200, o.Payload)
}

func (o *TaskSchemasGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaskSchemasGetDefault creates a TaskSchemasGetDefault with default headers values
func NewTaskSchemasGetDefault(code int) *TaskSchemasGetDefault {
	return &TaskSchemasGetDefault{
		_statusCode: code,
	}
}

/*TaskSchemasGetDefault handles this case with default header values.

Error
*/
type TaskSchemasGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the task schemas get default response
func (o *TaskSchemasGetDefault) Code() int {
	return o._statusCode
}

func (o *TaskSchemasGetDefault) Error() string {
	return fmt.Sprintf("[GET /schemas/tasks][%d] taskSchemasGet default  %+v", o._statusCode, o.Payload)
}

func (o *TaskSchemasGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*TaskSchemasGetOKBody task schemas get o k body
swagger:model TaskSchemasGetOKBody
*/
type TaskSchemasGetOKBody interface{}
