package pollers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// PollersLibByIDGetReader is a Reader for the PollersLibByIDGet structure.
type PollersLibByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PollersLibByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPollersLibByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPollersLibByIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPollersLibByIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPollersLibByIDGetOK creates a PollersLibByIDGetOK with default headers values
func NewPollersLibByIDGetOK() *PollersLibByIDGetOK {
	return &PollersLibByIDGetOK{}
}

/*PollersLibByIDGetOK handles this case with default header values.

Successful retrieval of the specified poller
*/
type PollersLibByIDGetOK struct {
	Payload PollersLibByIDGetOKBody
}

func (o *PollersLibByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /pollers/library/{identifier}][%d] pollersLibByIdGetOK  %+v", 200, o.Payload)
}

func (o *PollersLibByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPollersLibByIDGetNotFound creates a PollersLibByIDGetNotFound with default headers values
func NewPollersLibByIDGetNotFound() *PollersLibByIDGetNotFound {
	return &PollersLibByIDGetNotFound{}
}

/*PollersLibByIDGetNotFound handles this case with default header values.

The poller with specified identifier not found
*/
type PollersLibByIDGetNotFound struct {
	Payload *models.Error
}

func (o *PollersLibByIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /pollers/library/{identifier}][%d] pollersLibByIdGetNotFound  %+v", 404, o.Payload)
}

func (o *PollersLibByIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPollersLibByIDGetDefault creates a PollersLibByIDGetDefault with default headers values
func NewPollersLibByIDGetDefault(code int) *PollersLibByIDGetDefault {
	return &PollersLibByIDGetDefault{
		_statusCode: code,
	}
}

/*PollersLibByIDGetDefault handles this case with default header values.

Unexpected error
*/
type PollersLibByIDGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the pollers lib by Id get default response
func (o *PollersLibByIDGetDefault) Code() int {
	return o._statusCode
}

func (o *PollersLibByIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /pollers/library/{identifier}][%d] pollersLibByIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *PollersLibByIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PollersLibByIDGetOKBody pollers lib by ID get o k body
swagger:model PollersLibByIDGetOKBody
*/
type PollersLibByIDGetOKBody interface{}
