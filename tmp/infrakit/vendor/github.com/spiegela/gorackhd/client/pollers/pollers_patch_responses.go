package pollers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// PollersPatchReader is a Reader for the PollersPatch structure.
type PollersPatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PollersPatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPollersPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPollersPatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPollersPatchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPollersPatchOK creates a PollersPatchOK with default headers values
func NewPollersPatchOK() *PollersPatchOK {
	return &PollersPatchOK{}
}

/*PollersPatchOK handles this case with default header values.

Poller was successfully modified
*/
type PollersPatchOK struct {
	Payload PollersPatchOKBody
}

func (o *PollersPatchOK) Error() string {
	return fmt.Sprintf("[PATCH /pollers/{identifier}][%d] pollersPatchOK  %+v", 200, o.Payload)
}

func (o *PollersPatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPollersPatchNotFound creates a PollersPatchNotFound with default headers values
func NewPollersPatchNotFound() *PollersPatchNotFound {
	return &PollersPatchNotFound{}
}

/*PollersPatchNotFound handles this case with default header values.

Poller with the specified identifier was not found
*/
type PollersPatchNotFound struct {
	Payload *models.Error
}

func (o *PollersPatchNotFound) Error() string {
	return fmt.Sprintf("[PATCH /pollers/{identifier}][%d] pollersPatchNotFound  %+v", 404, o.Payload)
}

func (o *PollersPatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPollersPatchDefault creates a PollersPatchDefault with default headers values
func NewPollersPatchDefault(code int) *PollersPatchDefault {
	return &PollersPatchDefault{
		_statusCode: code,
	}
}

/*PollersPatchDefault handles this case with default header values.

Unexpected error
*/
type PollersPatchDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the pollers patch default response
func (o *PollersPatchDefault) Code() int {
	return o._statusCode
}

func (o *PollersPatchDefault) Error() string {
	return fmt.Sprintf("[PATCH /pollers/{identifier}][%d] pollersPatch default  %+v", o._statusCode, o.Payload)
}

func (o *PollersPatchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PollersPatchOKBody pollers patch o k body
swagger:model PollersPatchOKBody
*/
type PollersPatchOKBody interface{}
