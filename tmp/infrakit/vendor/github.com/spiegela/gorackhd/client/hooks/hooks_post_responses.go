package hooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// HooksPostReader is a Reader for the HooksPost structure.
type HooksPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HooksPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewHooksPostCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewHooksPostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewHooksPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHooksPostCreated creates a HooksPostCreated with default headers values
func NewHooksPostCreated() *HooksPostCreated {
	return &HooksPostCreated{}
}

/*HooksPostCreated handles this case with default header values.

Successfully created new hook
*/
type HooksPostCreated struct {
	Payload HooksPostCreatedBody
}

func (o *HooksPostCreated) Error() string {
	return fmt.Sprintf("[POST /hooks][%d] hooksPostCreated  %+v", 201, o.Payload)
}

func (o *HooksPostCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHooksPostConflict creates a HooksPostConflict with default headers values
func NewHooksPostConflict() *HooksPostConflict {
	return &HooksPostConflict{}
}

/*HooksPostConflict handles this case with default header values.

Duplicated hook.
*/
type HooksPostConflict struct {
	Payload *models.Error
}

func (o *HooksPostConflict) Error() string {
	return fmt.Sprintf("[POST /hooks][%d] hooksPostConflict  %+v", 409, o.Payload)
}

func (o *HooksPostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHooksPostDefault creates a HooksPostDefault with default headers values
func NewHooksPostDefault(code int) *HooksPostDefault {
	return &HooksPostDefault{
		_statusCode: code,
	}
}

/*HooksPostDefault handles this case with default header values.

Unexpected error
*/
type HooksPostDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the hooks post default response
func (o *HooksPostDefault) Code() int {
	return o._statusCode
}

func (o *HooksPostDefault) Error() string {
	return fmt.Sprintf("[POST /hooks][%d] hooksPost default  %+v", o._statusCode, o.Payload)
}

func (o *HooksPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*HooksPostCreatedBody hooks post created body
swagger:model HooksPostCreatedBody
*/
type HooksPostCreatedBody interface{}
